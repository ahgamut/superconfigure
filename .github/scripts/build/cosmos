#!/usr/bin/env bash
set -e

make ARCH=x86_64 cosmos
make ARCH=aarch64 cosmos

# rm -f cosmo.setup.*

export MODE=
export MODE_AARCH64=aarch64
export BASELOC=$(realpath $PWD)
export COSMO=$BASELOC/cosmopolitan
export COSMOS_X86=$BASELOC/cosmos/x86_64
export COSMOS_AARCH64=$BASELOC/cosmos/aarch64
export CONFIGDIR=$BASELOC/dummy
export RESULTS=$BASELOC/results

APELINK=$COSMO/o//tool/build/apelink.com
APELINKFLAGS=

apelinkpls () {
    OUTPUT="$1"
    OUTPUT_X86_64="$2"
    OUTPUT_AARCH64="$3"
    OLDNAME_X86_64="$(basename -- $OUTPUT_X86_64)"
    OLDNAME_AARCH64="$(basename -- $OUTPUT_AARCH64)"
    TARG_FOLD="$(dirname $OUTPUT)"
    "$APELINK" -l "$COSMO/o/$MODE/ape/ape.elf" \
        -l "$COSMO/o/$MODE_AARCH64/ape/ape.elf" \
        -M "$COSMO/ape/ape-m1.c" \
        -o "$OUTPUT" \
        "$OUTPUT_X86_64" \
        "$OUTPUT_AARCH64"
    cp "$OUTPUT_X86_64" "$TARG_FOLD/$OLDNAME_X86_64.x86_64"
    cp "$OUTPUT_AARCH64" "$TARG_FOLD/$OLDNAME_AARCH64.aarch64"
}

echo "creating fat APEs"
mkdir -p "$CONFIGDIR"
mkdir -p "$RESULTS"

# cli
cd "$CONFIGDIR"
mkdir -p etc usr/share
cp -r /zip/usr/share/terminfo ./usr/share
cp -r /zip/usr/share/zsh ./usr/share
cp /zip/etc/z* ./etc
ls -al /zip

cd $BASELOC
ls -al ./

TERMLIST='
bash
berry
less
zsh
tmux
'

for EXE in $TERMLIST; do
    apelinkpls $RESULTS/bin/$EXE.com $COSMOS_X86/bin/$EXE $COSMOS_AARCH64/bin/$EXE
    cd "$CONFIGDIR"
    zip -qr $RESULTS/bin/$EXE.com usr/share/terminfo
    cd "$BASELOC"
done

# zsh
cd "$CONFIGDIR"
zip -qr $RESULTS/bin/zsh.com usr/share/zsh
zip -qr0 $RESULTS/bin/zsh.com etc
cd "$BASELOC"


FILELIST='
[ b2sum base32 base64 basename basenc cat chcon chgrp chmod chown chroot cksum 
comm cp csplit cut date dd df dir dircolors dirname du echo env expand expr 
factor false fmt fold groups head id install join kill link ln logname ls 
md5sum mkdir mkfifo mknod mktemp mv nice nl nohup nproc numfmt od paste pathchk 
pinky pr printenv printf ptx pwd readlink realpath rm rmdir runcon seq sha1sum 
sha224sum sha256sum sha384sum sha512sum shred shuf sleep sort split stat stty 
sum sync tac tail tee test timeout touch tr true truncate tsort tty uname 
unexpand uniq unlink uptime users vdir wc who whoami yes 
find locate xargs
gmake
tree make lua sqlite3 awk sed tidy ninja grep'

for EXE in $FILELIST; do
    apelinkpls $RESULTS/bin/$EXE.com $COSMOS_X86/bin/$EXE $COSMOS_AARCH64/bin/$EXE
done

# cosmo-repo-thirdparty

FILELIST='
greenbean
life
nesemu1
printimage
script
ttyinfo
unbourne
wall
awk
bzip2
ctags
llama
lua
make
qjs
sqlite3
tidy
tree
unzip
zip
zstd
assimilate
pledge
verynice
redbean
'

for EXE in $FILELIST; do
    apelinkpls $RESULTS/bin/$EXE.com $COSMOS_X86/bin/$EXE $COSMOS_AARCH64/bin/$EXE
done

# compress

FILELIST='
xz
brotli
gzip
pigz
tar
'

for EXE in $FILELIST; do
    apelinkpls $RESULTS/bin/$EXE.com $COSMOS_X86/bin/$EXE $COSMOS_AARCH64/bin/$EXE
done

# editor

cd "$CONFIGDIR"
mkdir -p usr/share
cp -r /zip/x86_64 ./
cp -r /zip/aarch64 ./
cp -r /zip/usr/share/terminfo ./usr/share
cp -r /zip/usr/share/vim ./usr/share
cp -r /zip/usr/share/nano ./usr/share
cp -r /zip/usr/share/emacs ./usr/share
mkdir -p ./usr/share/ssl/certs/
cp /etc/ssl/certs/*.* ./usr/share/ssl/certs/ || true
ls -al /zip


cd $BASELOC
ls -al ./

# emacs
cd "$BASELOC"
for e in emacs emacsclient; do
    apelinkpls $RESULTS/bin/$e.com $COSMOS_X86/bin/$e $COSMOS_AARCH64/bin/$e
    cd "$CONFIGDIR"
    zip -qr $RESULTS/bin/$e.com \
        usr/share/ssl \
        usr/share/terminfo \
        $(find x86_64 -type f | grep '\.pdmp') \
        $(find aarch64 -type f | grep '\.pdmp') \
        $(find share/emacs -type f |
        grep -v '\.el.gz$' |
        grep -v refcards |
        grep -v images)
done

# vim
cd "$BASELOC"
apelinkpls $RESULTS/bin/vim.com $COSMOS_X86/bin/vim $COSMOS_AARCH64/bin/vim
cd "$CONFIGDIR"
zip -r $RESULTS/bin/vim.com \
    usr/share/terminfo \
    usr/share/vim

# nano
cd "$BASELOC"
apelinkpls $RESULTS/bin/nano.com $COSMOS_X86/bin/nano $COSMOS_AARCH64/bin/nano
cd "$CONFIGDIR"
zip -r $RESULTS/bin/nano.com \
    usr/share/terminfo\
    usr/share/nano

# datasette

apelinkpls $RESULTS/bin/datasette.com $COSMOS_X86/bin/datasette $COSMOS_AARCH64/bin/datasette
cd $CONFIGDIR
unzip -qo $BASELOC/python/cpy311-datasette/datasette/datasette.com || true
ls -al
mkdir -p build
cp -r $BASELOC/python/cpy311-datasette/datasette/dummy/lib*aarch64* ./build || true
cp -r $BASELOC/python/cpy311-datasette/datasette/dummy/lib*x86_64* ./build || true
ls -al build/
zip -qr $RESULTS/bin/datasette.com Lib/
zip -qr $RESULTS/bin/datasette.com build/
rm -rf Lib/ build/ usr/
cd "$BASELOC"

# pypack1

apelinkpls $RESULTS/bin/python.com $COSMOS_X86/bin/python $COSMOS_AARCH64/bin/python
cd $CONFIGDIR
unzip -qo $BASELOC/python/cpy311-pypack1/pypack1/python.com || true
ls -al
mkdir -p build
cp -r $BASELOC/python/cpy311-pypack1/pypack1/dummy/lib*aarch64* ./build || true 
cp -r $BASELOC/python/cpy311-pypack1/pypack1/dummy/lib*x86_64* ./build || true
ls -al build/
zip -qr $RESULTS/bin/python.com Lib/
zip -qr $RESULTS/bin/python.com build/
rm -rf Lib/ build/ usr/
cd "$BASELOC"
